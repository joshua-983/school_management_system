# Generated by Django 4.2.11 on 2025-07-02 16:06

import core.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.PositiveSmallIntegerField(choices=[(1, 'Term 1'), (2, 'Term 2'), (3, 'Term 3')])),
                ('academic_year', models.CharField(max_length=9)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-academic_year', 'term'],
                'unique_together': {('term', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='AttendancePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_locked', models.BooleanField(default=False)),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.academicterm')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_payable', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('balance', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('payment_mode', models.CharField(blank=True, choices=[('CASH', 'Cash'), ('BANK', 'Bank Transfer'), ('CARD', 'Credit Card'), ('CHECK', 'Check'), ('MOBILE', 'Mobile Money')], max_length=10)),
                ('payment_status', models.CharField(choices=[('PAID', 'Paid'), ('UNPAID', 'Unpaid'), ('PARTIAL', 'Part Payment'), ('OVERDUE', 'Overdue')], default='UNPAID', max_length=10)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('receipt_number', models.CharField(blank=True, editable=False, max_length=20, unique=True)),
                ('academic_year', models.CharField(max_length=9)),
                ('term', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('due_date', models.DateField()),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Fees',
                'ordering': ['-date_recorded', 'student'],
            },
        ),
        migrations.CreateModel(
            name='FeeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('applies_to_all', models.BooleanField(default=True)),
                ('class_levels', models.CharField(blank=True, help_text='Comma-separated list of class levels this applies to (leave blank for all)', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('nationality', models.CharField(max_length=100)),
                ('ethnicity', models.CharField(blank=True, max_length=100)),
                ('religion', models.CharField(blank=True, max_length=100)),
                ('place_of_birth', models.CharField(max_length=100)),
                ('residential_address', models.TextField()),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=core.models.student_image_path)),
                ('class_level', models.CharField(choices=[('P1', 'Primary 1'), ('P2', 'Primary 2'), ('P3', 'Primary 3'), ('P4', 'Primary 4'), ('P5', 'Primary 5'), ('P6', 'Primary 6'), ('J1', 'JHS 1'), ('J2', 'JHS 2'), ('J3', 'JHS 3')], max_length=2)),
                ('admission_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['class_level', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('class_levels', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('subjects', models.ManyToManyField(related_name='teachers', to='core.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ParentGuardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('relationship', models.CharField(choices=[('F', 'Father'), ('M', 'Mother'), ('B', 'Brother'), ('S', 'Sister'), ('O', 'Other Relative'), ('G', 'Guardian')], max_length=1)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('is_emergency_contact', models.BooleanField(default=False)),
                ('emergency_contact_priority', models.PositiveSmallIntegerField(default=1)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='core.student')),
            ],
            options={
                'verbose_name_plural': 'Parents/Guardians',
                'ordering': ['student', 'emergency_contact_priority'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('GRADE', 'Grade Update'), ('FEE', 'Fee Payment'), ('ASSIGNMENT', 'Assignment'), ('GENERAL', 'General')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('related_content_type', models.CharField(blank=True, max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('payment_mode', models.CharField(choices=[('CASH', 'Cash'), ('BANK', 'Bank Transfer'), ('CARD', 'Credit Card'), ('CHECK', 'Check'), ('MOBILE', 'Mobile Money')], max_length=10)),
                ('receipt_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('notes', models.TextField(blank=True)),
                ('bank_reference', models.CharField(blank=True, max_length=50)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='core.fee')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.AddField(
            model_name='fee',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.feecategory'),
        ),
        migrations.AddField(
            model_name='fee',
            name='recorded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_fees', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fee',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='core.student'),
        ),
        migrations.CreateModel(
            name='ClassAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_level', models.CharField(choices=[('P1', 'Primary 1'), ('P2', 'Primary 2'), ('P3', 'Primary 3'), ('P4', 'Primary 4'), ('P5', 'Primary 5'), ('P6', 'Primary 6'), ('J1', 'JHS 1'), ('J2', 'JHS 2'), ('J3', 'JHS 3')], max_length=2)),
                ('academic_year', models.CharField(max_length=9)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout')], max_length=10)),
                ('model_name', models.CharField(max_length=50)),
                ('object_id', models.CharField(max_length=50)),
                ('details', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_present', models.PositiveIntegerField(default=0)),
                ('days_absent', models.PositiveIntegerField(default=0)),
                ('days_late', models.PositiveIntegerField(default=0)),
                ('days_excused', models.PositiveIntegerField(default=0)),
                ('total_days', models.PositiveIntegerField(default=0)),
                ('attendance_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.attendanceperiod')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_summaries', to='core.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.academicterm')),
            ],
            options={
                'verbose_name_plural': 'Attendance Summaries',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('assignment_type', models.CharField(choices=[('HOMEWORK', 'Homework'), ('CLASSWORK', 'Classwork'), ('TEST', 'Test'), ('EXAM', 'Examination')], max_length=10)),
                ('due_date', models.DateTimeField()),
                ('max_score', models.PositiveSmallIntegerField(default=100)),
                ('weight', models.PositiveSmallIntegerField(help_text='Percentage weight of this assignment in the final grade', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.classassignment')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
            ],
            options={
                'ordering': ['-due_date', 'subject'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('target_roles', models.CharField(choices=[('ALL', 'All Users'), ('STUDENTS', 'Students'), ('TEACHERS', 'Teachers'), ('ADMINS', 'Administrators')], default='ALL', max_length=20)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='announcements/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.attendanceperiod')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Recorded By')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='core.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.academicterm')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='StudentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUBMITTED', 'Submitted'), ('LATE', 'Late'), ('GRADED', 'Graded')], default='PENDING', max_length=10)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='assignments/')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
            options={
                'ordering': ['assignment__due_date', 'student'],
                'unique_together': {('student', 'assignment')},
            },
        ),
        migrations.CreateModel(
            name='ReportCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator('^\\d{4}/\\d{4}$')])),
                ('term', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False)),
                ('teacher_remarks', models.TextField(blank=True)),
                ('principal_remarks', models.TextField(blank=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
            options={
                'ordering': ['-academic_year', '-term'],
                'unique_together': {('student', 'academic_year', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator('^\\d{4}/\\d{4}$')])),
                ('term', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('homework_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('classwork_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('test_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('exam_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_score', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=5, null=True)),
                ('grade', models.CharField(choices=[('A+', 'A+ (90-100)'), ('A', 'A (80-89)'), ('B+', 'B+ (70-79)'), ('B', 'B (60-69)'), ('C+', 'C+ (50-59)'), ('C', 'C (40-49)'), ('D+', 'D+ (30-39)'), ('D', 'D (20-29)'), ('E', 'E (0-19)'), ('N/A', 'Not Available')], default='N/A', editable=False, max_length=3)),
                ('remarks', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='core.classassignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='core.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='core.subject')),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grades',
                'ordering': ['student__last_name', 'student__first_name', 'subject__name'],
                'unique_together': {('student', 'subject', 'class_assignment', 'academic_year', 'term')},
            },
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['receipt_number'], name='core_fee_receipt_2ed792_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['payment_status'], name='core_fee_payment_859d8e_idx'),
        ),
        migrations.AddIndex(
            model_name='fee',
            index=models.Index(fields=['due_date'], name='core_fee_due_dat_31c206_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='classassignment',
            unique_together={('class_level', 'subject', 'academic_year')},
        ),
        migrations.AlterUniqueTogether(
            name='attendancesummary',
            unique_together={('student', 'term', 'period')},
        ),
        migrations.AlterUniqueTogether(
            name='attendanceperiod',
            unique_together={('period_type', 'term', 'start_date')},
        ),
    ]
